pragma abicoder               v2;


contract C {
    function f(bytes[] calldata a)
        external
        returns (uint, uint, bytes memory)
    {
        bytes memory m = a[0];
        return (a.length, m.length, m);
    }
}
// ====
// compileViaYul: also
// ----
// f(bytes[]): refargs {0x01, 0x01, "ab" } -> 0x1, 0x2, "ab"
// f(bytes[]): refargs {0x01, 0x01, "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN" } -> 0x1, 0x20, "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN"
// f(bytes[]): refargs {0x01, 0x01, "\x78\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x61" } -> 0x1, 0x20, "\x78\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x61"
// f(bytes[]): refargs {0x01, 0x01, "\x61\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x78" } -> 0x1, 0x20, "\x61\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x78"
// f(bytes[]): refargs {0x01, 0x01, "\x61\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x78" } -> 0x1, 0x20, "\x61\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x6d\x78"
