pragma abicoder               v2;

contract C {
    function f(uint256[] calldata s) external pure returns (bytes memory) {
        return abi.encode(s);
    }
    function g(uint256[] calldata s) external view returns (bytes memory) {
        return this.f(s);
    }
    function h(uint8[] calldata s) external pure returns (bytes memory) {
        return abi.encode(s);
    }
    function i(uint8[] calldata s) external view returns (bytes memory) {
        return this.h(s);
    }
    function j(bytes calldata s) external pure returns (bytes memory) {
        return abi.encode(s);
    }
    function k(bytes calldata s) external view returns (bytes memory) {
        return this.j(s);
    }
}
// ====
// compileViaYul: also
// EVMVersion: >homestead
// ----
// f(uint256[]): dynarray 256 [ 23, 42, 87 ] -> "\x01\x03\x17\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x2a\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x57\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
// g(uint256[]): dynarray 256 [ 23, 42, 87 ] -> "\x01\x03\x17\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x2a\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x57\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
// h(uint8[]): dynarray 8 [ 23, 42, 87 ] -> "\x01\x03\x17\x2a\x57"
// i(uint8[]): dynarray 8 [ 23, 42, 87 ] -> "\x01\x03\x17\x2a\x57"
// h(uint8[]): dynarray 16 [ 0xFF23, 0x1242, 0xAB87 ] -> "\x01\x03\x23\xff\x42"
// i(uint8[]): dynarray 16 [ 0xAB23, 0x1242, 0xFF87 ] -> "\x01\x03\x23\xab\x42"
// j(bytes): "\x12\x34\x56" -> "\x03\x00\x00\x00\x00\x00\x00\x00\x56\x34\x12"
// k(bytes): "\xAB\x33\xFF" -> "\x03\x00\x00\x00\x00\x00\x00\x00\xFF\x33\xAB"
