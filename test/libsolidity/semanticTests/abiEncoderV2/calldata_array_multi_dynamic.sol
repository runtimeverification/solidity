pragma abicoder               v2;

contract C {
    function f(uint256[][] calldata s) external pure returns (bytes memory) {
        return abi.encode(s);
    }
    function g(uint256[][] calldata s) external view returns (bytes memory) {
        return this.f(s);
    }
    function h(uint8[][] calldata s) external pure returns (bytes memory) {
        return abi.encode(s);
    }
    function i(uint8[][] calldata s) external view returns (bytes memory) {
        return this.h(s);
    }
    function j(bytes[] calldata s) external pure returns (bytes memory) {
        return abi.encode(s);
    }
    function k(bytes[] calldata s) external view returns (bytes memory) {
        return this.j(s);
    }
}
// ====
// compileViaYul: also
// EVMVersion: >homestead
// ----
// f(uint256[][]): refargs { 0x01, 0x02, 0x01, 0x03, 0x000000000000000000000000000000000000000000000000000000000000000d, 0x0000000000000000000000000000000000000000000000000000000000000011, 0x0000000000000000000000000000000000000000000000000000000000000017, 0x01, 0x04, 0x000000000000000000000000000000000000000000000000000000000000001b, 0x000000000000000000000000000000000000000000000000000000000000001f, 0x0000000000000000000000000000000000000000000000000000000000000025, 0x0000000000000000000000000000000000000000000000000000000000000029 } -> "\x01\x02\x01\x03\x0d\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x04\x1b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x25\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x29\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
// g(uint256[][]): refargs { 0x01, 0x02, 0x01, 0x03, 0x000000000000000000000000000000000000000000000000000000000000000d, 0x0000000000000000000000000000000000000000000000000000000000000011, 0x0000000000000000000000000000000000000000000000000000000000000017, 0x01, 0x04, 0x000000000000000000000000000000000000000000000000000000000000001b, 0x000000000000000000000000000000000000000000000000000000000000001f, 0x0000000000000000000000000000000000000000000000000000000000000025, 0x0000000000000000000000000000000000000000000000000000000000000029 } -> "\x01\x02\x01\x03\x0d\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x04\x1b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x25\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x29\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
// h(uint8[][]): refargs { 0x01, 0x02, 0x01, 0x03, 0x0d, 0x11, 0x17, 0x01, 0x04, 0x1b, 0x1f, 0x25, 0x29 } -> "\x01\x02\x01\x03\x0d\x11\x17\x01\x04\x1b\x1f\x25\x29"
// i(uint8[][]): refargs { 0x01, 0x02, 0x01, 0x03, 0x0d, 0x11, 0x17, 0x01, 0x04, 0x1b, 0x1f, 0x25, 0x29 } -> "\x01\x02\x01\x03\x0d\x11\x17\x01\x04\x1b\x1f\x25\x29"
// j(bytes[]): refargs { 0x01, 0x02, "\x13\x17\x23", "\x27\x31\x37\x41" } -> "\x01\x02\x03\x00\x00\x00\x00\x00\x00\x00\x23\x17\x13\x04\x00\x00\x00\x00\x00\x00\x00\x41\x37\x31\x27"
// k(bytes[]): refargs { 0x01, 0x02, "\x13\x17\x23", "\x27\x31\x37\x41" } -> "\x01\x02\x03\x00\x00\x00\x00\x00\x00\x00\x23\x17\x13\x04\x00\x00\x00\x00\x00\x00\x00\x41\x37\x31\x27"
