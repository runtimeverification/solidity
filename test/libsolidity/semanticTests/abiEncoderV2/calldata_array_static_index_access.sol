pragma abicoder               v2;

contract C {
    function f(uint256[3] calldata s) external pure returns (bytes memory) {
        return abi.encode(s);
    }
    function g(uint256[3][2] calldata s, uint256 which) external view returns (bytes memory) {
        return this.f(s[which]);
    }
    function h(uint8[3] calldata s) external pure returns (bytes memory) {
        return abi.encode(s);
    }
    function i(uint8[3][2] calldata s, uint256 which) external view returns (bytes memory) {
        return this.h(s[which]);
    }
}
// ====
// compileViaYul: also
// EVMVersion: >homestead
// ----
// f(uint256[3]): array 256 [ 23, 42, 87 ] -> "\x17\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x2a\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x57\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
// g(uint256[3][2],uint256): refargs { 0x0000000000000000000000000000000000000000000000000000000000000017, 0x000000000000000000000000000000000000000000000000000000000000002a, 0x0000000000000000000000000000000000000000000000000000000000000057, 0x000000000000000000000000000000000000000000000000000000000000007b, 0x000000000000000000000000000000000000000000000000000000000000008e, 0x00000000000000000000000000000000000000000000000000000000000000bb }, 0 -> "\x17\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x2a\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x57\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
// g(uint256[3][2],uint256): refargs { 0x0000000000000000000000000000000000000000000000000000000000000017, 0x000000000000000000000000000000000000000000000000000000000000002a, 0x0000000000000000000000000000000000000000000000000000000000000057, 0x000000000000000000000000000000000000000000000000000000000000007b, 0x000000000000000000000000000000000000000000000000000000000000008e, 0x00000000000000000000000000000000000000000000000000000000000000bb }, 1 -> "\x7b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x8e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xbb\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
// h(uint8[3]): array 8 [ 23, 42, 87 ] -> "\x17\x2a\x57"
// i(uint8[3][2],uint256): refargs { 0x17, 0x2a, 0x57, 0x7b, 0x8e, 0xbb }, 0 -> "\x17\x2a\x57"
// i(uint8[3][2],uint256): refargs { 0x17, 0x2a, 0x57, 0x7b, 0x8e, 0xbb }, 1 -> "\x7b\x8e\xbb"
