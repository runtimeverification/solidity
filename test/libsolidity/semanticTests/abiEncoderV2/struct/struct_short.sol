pragma abicoder               v2;

contract C {
    struct S { int256 a; uint256 b; bytes16 c; }
    function f(S memory s) public pure returns (S memory q) {
        q = s;
    }
}
// ====
// compileViaYul: also
// compileToEwasm: also
// ----
// f((int256,uint256,bytes16)): refargs { 0x00000000000000000000000000000000000000000000000000000000000ff010, 0x0000000000000000000000000000000000000000000000000000000000ff0002, 0x61626364000000000000000000000000 } -> refargs { 0x00000000000000000000000000000000000000000000000000000000000ff010, 0x0000000000000000000000000000000000000000000000000000000000ff0002, 0x61626364000000000000000000000000 }
// f((int256,uint256,bytes16)): refargs { 0x00000000000000000000000000000000000000000000000000000000000ff010, 0x0000000000000000000000000000000000000000000000000000000000ff0002, 0x11112222333344445555666677778888 } -> refargs { 0x00000000000000000000000000000000000000000000000000000000000ff010, 0x0000000000000000000000000000000000000000000000000000000000ff0002, 0x11112222333344445555666677778888 }
